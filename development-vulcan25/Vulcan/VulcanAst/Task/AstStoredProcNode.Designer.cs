//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Varigence Ast Designer tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.  Do not edit this file unless you know exactly
//     you are doing and are synchronized with the Vulcan development team.
//
//     For more information about the Varigence Ast Designer tool, email
//     support@varigence.com.
//
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Specialized;
using Vulcan.Utility.ComponentModel;
using AstFramework;
using AstFramework.Engine.Binding;
using AstFramework.Model;
using AstFramework.Markup;
using VulcanEngine.AstFramework;
using Vulcan.Utility.Collections;
using System.Reflection;
using System.Collections.Generic;
using Vulcan.Utility.Xml;
using Vulcan.Utility.Common;
using Vulcan.Utility.Markup;

namespace VulcanEngine.IR.Ast.Task
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance")]
    [FriendlyNameAttribute("StoredProcedure")]
    [AstSchemaTypeBindingAttribute("StoredProcElemType", "http://tempuri.org/vulcan2.xsd")]
    public partial class AstStoredProcNode : VulcanEngine.IR.Ast.Task.AstTaskNode
    {
        #region Private Storage
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Boolean ExecuteDuringDesignTime_BackingField;
        private bool _isExecuteDuringDesignTimeExplicitlySet;

        private VulcanEngine.IR.Ast.Connection.AstConnectionNode _connection;

        private VulcanCollection<VulcanEngine.IR.Ast.Task.AstStoredProcColumnNode> _columns;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.String Body_BackingField;
        private bool __isNotFirstSet_Body_BackingField;
        private bool _isBodyExplicitlySet;

        private VulcanCollection<VulcanEngine.IR.Ast.AstPermissionNode> _permissions;

        #endregion Private Storage

        #region Public Accessor Properties
        [VulcanCategory("Optional")]
        [VulcanDefaultValue(false)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("ExecuteDuringDesignTime", ChildType.Attribute, DefaultValue = "false")]
        public System.Boolean ExecuteDuringDesignTime
        {
            get { return ExecuteDuringDesignTime_BackingField; }
            set
            {
                if (ExecuteDuringDesignTime_BackingField != value)
                {
                    System.Boolean oldValue = ExecuteDuringDesignTime_BackingField;
                    ExecuteDuringDesignTime_BackingField = value;
                    VulcanOnPropertyChanged("ExecuteDuringDesignTime", oldValue, ExecuteDuringDesignTime_BackingField);
                    IsExecuteDuringDesignTimeExplicitlySet = true;
                }
            }
        }

        public bool IsExecuteDuringDesignTimeExplicitlySet
        {
            get { return _isExecuteDuringDesignTimeExplicitlySet; }
            protected set
            {
                if (_isExecuteDuringDesignTimeExplicitlySet != value)
                {
                    bool oldValue = _isExecuteDuringDesignTimeExplicitlySet;
                    _isExecuteDuringDesignTimeExplicitlySet = value;
                    VulcanOnPropertyChanged("IsExecuteDuringDesignTimeExplicitlySet", oldValue, _isExecuteDuringDesignTimeExplicitlySet);
                }
            }
        }


        [VulcanCategory("Required")]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("ConnectionName", ChildType.Attribute)]
        public VulcanEngine.IR.Ast.Connection.AstConnectionNode Connection
        {
            get { return _connection; }
            set
            {
                if (_connection != value)
                {
                    if (_connection != null)
                    {
                        _connection.Unreference(this, "Connection");
                    }
                    VulcanEngine.IR.Ast.Connection.AstConnectionNode oldValue = _connection;
                    _connection = value;
                    if (_connection != null)
                    {
                        _connection.Reference(this, "Connection");
                    }
                    VulcanOnPropertyChanged("Connection", oldValue, _connection);
                }
            }
        }


        [VulcanCategory("Read Only")]
        [VulcanDescription(@"")]
        [Browsable(false)]
        [AstXNameBinding("Column", ChildType.ListChildDefinition)]
        public VulcanCollection<VulcanEngine.IR.Ast.Task.AstStoredProcColumnNode> Columns
        {
            get { return _columns; }
        }


        [VulcanCategory("Required")]
        [AstRequiredProperty]
        [VulcanDescription(@"")]
        [Browsable(false)]
        [AstXNameBinding("Body", ChildType.ChildDefinition)]
        public System.String Body
        {
            get { return Body_BackingField; }
            set
            {
                if (Body_BackingField != value || !__isNotFirstSet_Body_BackingField)
                {
                    __isNotFirstSet_Body_BackingField = true;
                    System.String oldValue = Body_BackingField;
                    Body_BackingField = value;
                    VulcanOnPropertyChanged("Body", oldValue, Body_BackingField);
                    IsBodyExplicitlySet = true;
                }
            }
        }

        public bool IsBodyExplicitlySet
        {
            get { return _isBodyExplicitlySet; }
            protected set
            {
                if (_isBodyExplicitlySet != value)
                {
                    bool oldValue = _isBodyExplicitlySet;
                    _isBodyExplicitlySet = value;
                    VulcanOnPropertyChanged("IsBodyExplicitlySet", oldValue, _isBodyExplicitlySet);
                }
            }
        }


        [Browsable(false)]
        [AstXNameBinding("Permission", ChildType.ListChildDefinition)]
        public VulcanCollection<VulcanEngine.IR.Ast.AstPermissionNode> Permissions
        {
            get { return _permissions; }
        }


        #endregion Public Accessor Properties

        #region Collection Methods


        private void _columns_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            VulcanEngine.IR.Ast.Task.AstStoredProcColumnNode.ProcessAstNamedNodeCollectionAction(e);
            VulcanOnCollectionPropertyChanged("Columns", e);
        }


        private void _permissions_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            VulcanOnCollectionPropertyChanged("Permissions", e);
        }

        #endregion Collection Methods

        #region Initialization
        private void InitializeAstNode()
        {
            ExecuteDuringDesignTime_BackingField = false;
            _columns = new VulcanCollection<VulcanEngine.IR.Ast.Task.AstStoredProcColumnNode>();
            _columns.CollectionChanged += _columns_CollectionChanged;
            _permissions = new VulcanCollection<VulcanEngine.IR.Ast.AstPermissionNode>();
            _permissions.CollectionChanged += _permissions_CollectionChanged;
        }

        #endregion Initialization

        public override VulcanCollection<IFrameworkItem> DefinedAstNodes()
        {
            var definedAstNodes = new VulcanCollection<IFrameworkItem>();
            definedAstNodes.AddRange(base.DefinedAstNodes());


            foreach (var item in _columns)
            {
                definedAstNodes.Add(item);
            }


            foreach (var item in _permissions)
            {
                definedAstNodes.Add(item);
            }

            return definedAstNodes;
        }


        public override IEnumerable<IScopeBoundary> BindingScopeBoundaries()
        {
            var bindingScopeBoundaries = new List<IScopeBoundary>();
            bindingScopeBoundaries.Add(ScopeBoundary);
            return bindingScopeBoundaries;
        }


        #region Cloning Support
        public override IFrameworkItem Clone()
        {
            return Clone(ParentItem);
        }

        public override IFrameworkItem Clone(Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            return Clone(ParentItem, cloneMapping);
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem)
        {
            return Clone(parentItem, new Dictionary<IFrameworkItem, IFrameworkItem>());
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            SymbolTable.GetSourceToCloneDefinitionMappings(this, parentItem, cloneMapping);
            CloneInto(cloneMapping[this], cloneMapping);
            return cloneMapping[this];
        }

        public override void CloneInto(IFrameworkItem targetItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            base.CloneInto(targetItem, cloneMapping);
            if (targetItem == null || !typeof(AstStoredProcNode).IsAssignableFrom(targetItem.GetType()))
            {
                throw new ArgumentException("Provided target node is not of the correct type.");
            }
            var castedTargetItem = (AstStoredProcNode)targetItem;
            castedTargetItem.ExecuteDuringDesignTime_BackingField = ExecuteDuringDesignTime_BackingField;

            if (_connection == null)
            {
                castedTargetItem._connection = null;
            }
            else if (cloneMapping.ContainsKey(_connection))
            {
                castedTargetItem._connection = (VulcanEngine.IR.Ast.Connection.AstConnectionNode)cloneMapping[_connection];
            }
            else
            {
                castedTargetItem._connection = _connection;
            }

            foreach (var item in _columns)
            {
                IFrameworkItem candidate = cloneMapping[item];
                castedTargetItem._columns.Add((VulcanEngine.IR.Ast.Task.AstStoredProcColumnNode)candidate);
                item.CloneInto(candidate, cloneMapping);
            }

            castedTargetItem.Body_BackingField = Body_BackingField;

            foreach (var item in _permissions)
            {
                IFrameworkItem candidate = cloneMapping[item];
                castedTargetItem._permissions.Add((VulcanEngine.IR.Ast.AstPermissionNode)candidate);
                item.CloneInto(candidate, cloneMapping);
            }

        }

        public override IFrameworkItem CloneHusk(IFrameworkItem parentItem)
        {
            return new AstStoredProcNode(parentItem);
        }

        #endregion Cloning Support


    }
}
