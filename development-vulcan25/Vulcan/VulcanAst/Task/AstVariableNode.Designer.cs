//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Varigence Ast Designer tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.  Do not edit this file unless you know exactly
//     you are doing and are synchronized with the Vulcan development team.
//
//     For more information about the Varigence Ast Designer tool, email
//     support@varigence.com.
//
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Specialized;
using Vulcan.Utility.ComponentModel;
using AstFramework;
using AstFramework.Engine.Binding;
using AstFramework.Model;
using AstFramework.Markup;
using VulcanEngine.AstFramework;
using Vulcan.Utility.Collections;
using System.Reflection;
using System.Collections.Generic;
using Vulcan.Utility.Xml;
using Vulcan.Utility.Common;
using Vulcan.Utility.Markup;

namespace VulcanEngine.IR.Ast.Task
{
    [FriendlyNameAttribute("Variable")]
    [AstSchemaTypeBindingAttribute("VariableTaskElemType", "http://tempuri.org/vulcan2.xsd")]
    public partial class AstVariableNode : VulcanEngine.IR.Ast.AstNamedNode
    {
        #region Private Storage
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.TypeCode TypeCode_BackingField;
        private bool __isNotFirstSet_TypeCode_BackingField;
        private bool _isTypeCodeExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.String Value_BackingField;
        private bool __isNotFirstSet_Value_BackingField;
        private bool _isValueExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Boolean EvaluateAsExpression_BackingField;
        private bool _isEvaluateAsExpressionExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Boolean InheritFromPackageParent_BackingField;
        private bool _isInheritFromPackageParentExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.String InheritFromPackageParentConfigurationString_BackingField;
        private bool _isInheritFromPackageParentConfigurationStringExplicitlySet;

        #endregion Private Storage

        #region Public Accessor Properties
        [VulcanCategory("Required")]
        [AstRequiredProperty]
        [Browsable(true)]
        [AstXNameBinding("TypeCode", ChildType.Attribute)]
        public System.TypeCode TypeCode
        {
            get { return TypeCode_BackingField; }
            set
            {
                if (TypeCode_BackingField != value || !__isNotFirstSet_TypeCode_BackingField)
                {
                    __isNotFirstSet_TypeCode_BackingField = true;
                    System.TypeCode oldValue = TypeCode_BackingField;
                    TypeCode_BackingField = value;
                    VulcanOnPropertyChanged("TypeCode", oldValue, TypeCode_BackingField);
                    IsTypeCodeExplicitlySet = true;
                }
            }
        }

        public bool IsTypeCodeExplicitlySet
        {
            get { return _isTypeCodeExplicitlySet; }
            protected set
            {
                if (_isTypeCodeExplicitlySet != value)
                {
                    bool oldValue = _isTypeCodeExplicitlySet;
                    _isTypeCodeExplicitlySet = value;
                    VulcanOnPropertyChanged("IsTypeCodeExplicitlySet", oldValue, _isTypeCodeExplicitlySet);
                }
            }
        }


        [VulcanCategory("Required")]
        [AstRequiredProperty]
        [Browsable(true)]
        [AstXNameBinding("Value", ChildType.Attribute)]
        public System.String Value
        {
            get { return Value_BackingField; }
            set
            {
                if (Value_BackingField != value || !__isNotFirstSet_Value_BackingField)
                {
                    __isNotFirstSet_Value_BackingField = true;
                    System.String oldValue = Value_BackingField;
                    Value_BackingField = value;
                    VulcanOnPropertyChanged("Value", oldValue, Value_BackingField);
                    IsValueExplicitlySet = true;
                }
            }
        }

        public bool IsValueExplicitlySet
        {
            get { return _isValueExplicitlySet; }
            protected set
            {
                if (_isValueExplicitlySet != value)
                {
                    bool oldValue = _isValueExplicitlySet;
                    _isValueExplicitlySet = value;
                    VulcanOnPropertyChanged("IsValueExplicitlySet", oldValue, _isValueExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(false)]
        [Browsable(true)]
        [AstXNameBinding("EvaluateAsExpression", ChildType.Attribute, DefaultValue = "false")]
        public System.Boolean EvaluateAsExpression
        {
            get { return EvaluateAsExpression_BackingField; }
            set
            {
                if (EvaluateAsExpression_BackingField != value)
                {
                    System.Boolean oldValue = EvaluateAsExpression_BackingField;
                    EvaluateAsExpression_BackingField = value;
                    VulcanOnPropertyChanged("EvaluateAsExpression", oldValue, EvaluateAsExpression_BackingField);
                    IsEvaluateAsExpressionExplicitlySet = true;
                }
            }
        }

        public bool IsEvaluateAsExpressionExplicitlySet
        {
            get { return _isEvaluateAsExpressionExplicitlySet; }
            protected set
            {
                if (_isEvaluateAsExpressionExplicitlySet != value)
                {
                    bool oldValue = _isEvaluateAsExpressionExplicitlySet;
                    _isEvaluateAsExpressionExplicitlySet = value;
                    VulcanOnPropertyChanged("IsEvaluateAsExpressionExplicitlySet", oldValue, _isEvaluateAsExpressionExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(false)]
        [Browsable(true)]
        [AstXNameBinding("InheritFromPackageParent", ChildType.Attribute, DefaultValue = "false")]
        public System.Boolean InheritFromPackageParent
        {
            get { return InheritFromPackageParent_BackingField; }
            set
            {
                if (InheritFromPackageParent_BackingField != value)
                {
                    System.Boolean oldValue = InheritFromPackageParent_BackingField;
                    InheritFromPackageParent_BackingField = value;
                    VulcanOnPropertyChanged("InheritFromPackageParent", oldValue, InheritFromPackageParent_BackingField);
                    IsInheritFromPackageParentExplicitlySet = true;
                }
            }
        }

        public bool IsInheritFromPackageParentExplicitlySet
        {
            get { return _isInheritFromPackageParentExplicitlySet; }
            protected set
            {
                if (_isInheritFromPackageParentExplicitlySet != value)
                {
                    bool oldValue = _isInheritFromPackageParentExplicitlySet;
                    _isInheritFromPackageParentExplicitlySet = value;
                    VulcanOnPropertyChanged("IsInheritFromPackageParentExplicitlySet", oldValue, _isInheritFromPackageParentExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [Browsable(true)]
        [AstXNameBinding("InheritFromPackageParentConfigurationString", ChildType.Attribute)]
        public System.String InheritFromPackageParentConfigurationString
        {
            get { return InheritFromPackageParentConfigurationString_BackingField; }
            set
            {
                if (InheritFromPackageParentConfigurationString_BackingField != value)
                {
                    System.String oldValue = InheritFromPackageParentConfigurationString_BackingField;
                    InheritFromPackageParentConfigurationString_BackingField = value;
                    VulcanOnPropertyChanged("InheritFromPackageParentConfigurationString", oldValue, InheritFromPackageParentConfigurationString_BackingField);
                    IsInheritFromPackageParentConfigurationStringExplicitlySet = true;
                }
            }
        }

        public bool IsInheritFromPackageParentConfigurationStringExplicitlySet
        {
            get { return _isInheritFromPackageParentConfigurationStringExplicitlySet; }
            protected set
            {
                if (_isInheritFromPackageParentConfigurationStringExplicitlySet != value)
                {
                    bool oldValue = _isInheritFromPackageParentConfigurationStringExplicitlySet;
                    _isInheritFromPackageParentConfigurationStringExplicitlySet = value;
                    VulcanOnPropertyChanged("IsInheritFromPackageParentConfigurationStringExplicitlySet", oldValue, _isInheritFromPackageParentConfigurationStringExplicitlySet);
                }
            }
        }


        #endregion Public Accessor Properties

        #region Collection Methods





        #endregion Collection Methods

        #region Initialization
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        private void InitializeAstNode()
        {
            EvaluateAsExpression_BackingField = false;
            InheritFromPackageParent_BackingField = false;
        }

        #endregion Initialization

        public override VulcanCollection<IFrameworkItem> DefinedAstNodes()
        {
            var definedAstNodes = new VulcanCollection<IFrameworkItem>();
            definedAstNodes.AddRange(base.DefinedAstNodes());





            return definedAstNodes;
        }


        public override IEnumerable<IScopeBoundary> BindingScopeBoundaries()
        {
            var bindingScopeBoundaries = new List<IScopeBoundary>();
            bindingScopeBoundaries.Add(ScopeBoundary);
            return bindingScopeBoundaries;
        }


        #region Cloning Support
        public override IFrameworkItem Clone()
        {
            return Clone(ParentItem);
        }

        public override IFrameworkItem Clone(Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            return Clone(ParentItem, cloneMapping);
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem)
        {
            return Clone(parentItem, new Dictionary<IFrameworkItem, IFrameworkItem>());
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            SymbolTable.GetSourceToCloneDefinitionMappings(this, parentItem, cloneMapping);
            CloneInto(cloneMapping[this], cloneMapping);
            return cloneMapping[this];
        }

        public override void CloneInto(IFrameworkItem targetItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            base.CloneInto(targetItem, cloneMapping);
            if (targetItem == null || !typeof(AstVariableNode).IsAssignableFrom(targetItem.GetType()))
            {
                throw new ArgumentException("Provided target node is not of the correct type.");
            }
            var castedTargetItem = (AstVariableNode)targetItem;
            castedTargetItem.TypeCode_BackingField = TypeCode_BackingField;

            castedTargetItem.Value_BackingField = Value_BackingField;

            castedTargetItem.EvaluateAsExpression_BackingField = EvaluateAsExpression_BackingField;

            castedTargetItem.InheritFromPackageParent_BackingField = InheritFromPackageParent_BackingField;

            castedTargetItem.InheritFromPackageParentConfigurationString_BackingField = InheritFromPackageParentConfigurationString_BackingField;

        }

        public override IFrameworkItem CloneHusk(IFrameworkItem parentItem)
        {
            return new AstVariableNode(parentItem);
        }

        #endregion Cloning Support


    }
}
