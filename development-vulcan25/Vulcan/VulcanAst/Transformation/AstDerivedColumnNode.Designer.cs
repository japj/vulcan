//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Varigence Ast Designer tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.  Do not edit this file unless you know exactly
//     you are doing and are synchronized with the Vulcan development team.
//
//     For more information about the Varigence Ast Designer tool, email
//     support@varigence.com.
//
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Specialized;
using Vulcan.Utility.ComponentModel;
using AstFramework;
using AstFramework.Engine.Binding;
using AstFramework.Model;
using AstFramework.Markup;
using VulcanEngine.AstFramework;
using Vulcan.Utility.Collections;
using System.Reflection;
using System.Collections.Generic;
using Vulcan.Utility.Xml;
using Vulcan.Utility.Common;
using Vulcan.Utility.Markup;

namespace VulcanEngine.IR.Ast.Transformation
{
    [AstSchemaTypeBindingAttribute("TransformationDerivedColumnElemType", "http://tempuri.org/vulcan2.xsd")]
    public partial class AstDerivedColumnNode : VulcanEngine.IR.Ast.AstNamedNode
    {
        #region Private Storage
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected VulcanEngine.IR.Ast.ColumnType DerivedColumnType_BackingField;
        private bool __isNotFirstSet_DerivedColumnType_BackingField;
        private bool _isDerivedColumnTypeExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Int32 Length_BackingField;
        private bool _isLengthExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Int32 Precision_BackingField;
        private bool _isPrecisionExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Int32 Scale_BackingField;
        private bool _isScaleExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Int32 Codepage_BackingField;
        private bool _isCodepageExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.Boolean ReplaceExisting_BackingField;
        private bool _isReplaceExistingExplicitlySet;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]
        protected System.String Expression_BackingField;
        private bool __isNotFirstSet_Expression_BackingField;
        private bool _isExpressionExplicitlySet;

        #endregion Private Storage

        #region Public Accessor Properties
        [VulcanCategory("Required")]
        [AstRequiredProperty]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("Type", ChildType.Attribute)]
        public VulcanEngine.IR.Ast.ColumnType DerivedColumnType
        {
            get { return DerivedColumnType_BackingField; }
            set
            {
                if (DerivedColumnType_BackingField != value || !__isNotFirstSet_DerivedColumnType_BackingField)
                {
                    __isNotFirstSet_DerivedColumnType_BackingField = true;
                    VulcanEngine.IR.Ast.ColumnType oldValue = DerivedColumnType_BackingField;
                    DerivedColumnType_BackingField = value;
                    VulcanOnPropertyChanged("DerivedColumnType", oldValue, DerivedColumnType_BackingField);
                    IsDerivedColumnTypeExplicitlySet = true;
                }
            }
        }

        public bool IsDerivedColumnTypeExplicitlySet
        {
            get { return _isDerivedColumnTypeExplicitlySet; }
            protected set
            {
                if (_isDerivedColumnTypeExplicitlySet != value)
                {
                    bool oldValue = _isDerivedColumnTypeExplicitlySet;
                    _isDerivedColumnTypeExplicitlySet = value;
                    VulcanOnPropertyChanged("IsDerivedColumnTypeExplicitlySet", oldValue, _isDerivedColumnTypeExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(-1)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("Length", ChildType.Attribute, DefaultValue = "-1")]
        public System.Int32 Length
        {
            get { return Length_BackingField; }
            set
            {
                if (Length_BackingField != value)
                {
                    System.Int32 oldValue = Length_BackingField;
                    Length_BackingField = value;
                    VulcanOnPropertyChanged("Length", oldValue, Length_BackingField);
                    IsLengthExplicitlySet = true;
                }
            }
        }

        public bool IsLengthExplicitlySet
        {
            get { return _isLengthExplicitlySet; }
            protected set
            {
                if (_isLengthExplicitlySet != value)
                {
                    bool oldValue = _isLengthExplicitlySet;
                    _isLengthExplicitlySet = value;
                    VulcanOnPropertyChanged("IsLengthExplicitlySet", oldValue, _isLengthExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(-1)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("Precision", ChildType.Attribute, DefaultValue = "-1")]
        public System.Int32 Precision
        {
            get { return Precision_BackingField; }
            set
            {
                if (Precision_BackingField != value)
                {
                    System.Int32 oldValue = Precision_BackingField;
                    Precision_BackingField = value;
                    VulcanOnPropertyChanged("Precision", oldValue, Precision_BackingField);
                    IsPrecisionExplicitlySet = true;
                }
            }
        }

        public bool IsPrecisionExplicitlySet
        {
            get { return _isPrecisionExplicitlySet; }
            protected set
            {
                if (_isPrecisionExplicitlySet != value)
                {
                    bool oldValue = _isPrecisionExplicitlySet;
                    _isPrecisionExplicitlySet = value;
                    VulcanOnPropertyChanged("IsPrecisionExplicitlySet", oldValue, _isPrecisionExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(-1)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("Scale", ChildType.Attribute, DefaultValue = "-1")]
        public System.Int32 Scale
        {
            get { return Scale_BackingField; }
            set
            {
                if (Scale_BackingField != value)
                {
                    System.Int32 oldValue = Scale_BackingField;
                    Scale_BackingField = value;
                    VulcanOnPropertyChanged("Scale", oldValue, Scale_BackingField);
                    IsScaleExplicitlySet = true;
                }
            }
        }

        public bool IsScaleExplicitlySet
        {
            get { return _isScaleExplicitlySet; }
            protected set
            {
                if (_isScaleExplicitlySet != value)
                {
                    bool oldValue = _isScaleExplicitlySet;
                    _isScaleExplicitlySet = value;
                    VulcanOnPropertyChanged("IsScaleExplicitlySet", oldValue, _isScaleExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(-1)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("Codepage", ChildType.Attribute, DefaultValue = "-1")]
        public System.Int32 Codepage
        {
            get { return Codepage_BackingField; }
            set
            {
                if (Codepage_BackingField != value)
                {
                    System.Int32 oldValue = Codepage_BackingField;
                    Codepage_BackingField = value;
                    VulcanOnPropertyChanged("Codepage", oldValue, Codepage_BackingField);
                    IsCodepageExplicitlySet = true;
                }
            }
        }

        public bool IsCodepageExplicitlySet
        {
            get { return _isCodepageExplicitlySet; }
            protected set
            {
                if (_isCodepageExplicitlySet != value)
                {
                    bool oldValue = _isCodepageExplicitlySet;
                    _isCodepageExplicitlySet = value;
                    VulcanOnPropertyChanged("IsCodepageExplicitlySet", oldValue, _isCodepageExplicitlySet);
                }
            }
        }


        [VulcanCategory("Optional")]
        [VulcanDefaultValue(false)]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("ReplaceExisting", ChildType.Attribute, DefaultValue = "false")]
        public System.Boolean ReplaceExisting
        {
            get { return ReplaceExisting_BackingField; }
            set
            {
                if (ReplaceExisting_BackingField != value)
                {
                    System.Boolean oldValue = ReplaceExisting_BackingField;
                    ReplaceExisting_BackingField = value;
                    VulcanOnPropertyChanged("ReplaceExisting", oldValue, ReplaceExisting_BackingField);
                    IsReplaceExistingExplicitlySet = true;
                }
            }
        }

        public bool IsReplaceExistingExplicitlySet
        {
            get { return _isReplaceExistingExplicitlySet; }
            protected set
            {
                if (_isReplaceExistingExplicitlySet != value)
                {
                    bool oldValue = _isReplaceExistingExplicitlySet;
                    _isReplaceExistingExplicitlySet = value;
                    VulcanOnPropertyChanged("IsReplaceExistingExplicitlySet", oldValue, _isReplaceExistingExplicitlySet);
                }
            }
        }


        [VulcanCategory("Required")]
        [AstRequiredProperty]
        [VulcanDescription(@"")]
        [Browsable(true)]
        [AstXNameBinding("__self", ChildType.Self)]
        public System.String Expression
        {
            get { return Expression_BackingField; }
            set
            {
                if (Expression_BackingField != value || !__isNotFirstSet_Expression_BackingField)
                {
                    __isNotFirstSet_Expression_BackingField = true;
                    System.String oldValue = Expression_BackingField;
                    Expression_BackingField = value;
                    VulcanOnPropertyChanged("Expression", oldValue, Expression_BackingField);
                    IsExpressionExplicitlySet = true;
                }
            }
        }

        public bool IsExpressionExplicitlySet
        {
            get { return _isExpressionExplicitlySet; }
            protected set
            {
                if (_isExpressionExplicitlySet != value)
                {
                    bool oldValue = _isExpressionExplicitlySet;
                    _isExpressionExplicitlySet = value;
                    VulcanOnPropertyChanged("IsExpressionExplicitlySet", oldValue, _isExpressionExplicitlySet);
                }
            }
        }


        #endregion Public Accessor Properties

        #region Collection Methods







        #endregion Collection Methods

        #region Initialization
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        private void InitializeAstNode()
        {
            Length_BackingField = -1;
            Precision_BackingField = -1;
            Scale_BackingField = -1;
            Codepage_BackingField = -1;
            ReplaceExisting_BackingField = false;
        }

        #endregion Initialization

        public override VulcanCollection<IFrameworkItem> DefinedAstNodes()
        {
            var definedAstNodes = new VulcanCollection<IFrameworkItem>();
            definedAstNodes.AddRange(base.DefinedAstNodes());







            return definedAstNodes;
        }


        public override IEnumerable<IScopeBoundary> BindingScopeBoundaries()
        {
            var bindingScopeBoundaries = new List<IScopeBoundary>();
            bindingScopeBoundaries.Add(ScopeBoundary);
            return bindingScopeBoundaries;
        }


        #region Cloning Support
        public override IFrameworkItem Clone()
        {
            return Clone(ParentItem);
        }

        public override IFrameworkItem Clone(Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            return Clone(ParentItem, cloneMapping);
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem)
        {
            return Clone(parentItem, new Dictionary<IFrameworkItem, IFrameworkItem>());
        }

        public override IFrameworkItem Clone(IFrameworkItem parentItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            SymbolTable.GetSourceToCloneDefinitionMappings(this, parentItem, cloneMapping);
            CloneInto(cloneMapping[this], cloneMapping);
            return cloneMapping[this];
        }

        public override void CloneInto(IFrameworkItem targetItem, Dictionary<IFrameworkItem, IFrameworkItem> cloneMapping)
        {
            base.CloneInto(targetItem, cloneMapping);
            if (targetItem == null || !typeof(AstDerivedColumnNode).IsAssignableFrom(targetItem.GetType()))
            {
                throw new ArgumentException("Provided target node is not of the correct type.");
            }
            var castedTargetItem = (AstDerivedColumnNode)targetItem;
            castedTargetItem.DerivedColumnType_BackingField = DerivedColumnType_BackingField;

            castedTargetItem.Length_BackingField = Length_BackingField;

            castedTargetItem.Precision_BackingField = Precision_BackingField;

            castedTargetItem.Scale_BackingField = Scale_BackingField;

            castedTargetItem.Codepage_BackingField = Codepage_BackingField;

            castedTargetItem.ReplaceExisting_BackingField = ReplaceExisting_BackingField;

            castedTargetItem.Expression_BackingField = Expression_BackingField;

        }

        public override IFrameworkItem CloneHusk(IFrameworkItem parentItem)
        {
            return new AstDerivedColumnNode(parentItem);
        }

        #endregion Cloning Support


    }
}
